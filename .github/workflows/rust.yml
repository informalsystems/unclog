name: Rust
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  cleanup-runs:
    name: Clean up runs
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy-json-output:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          name: clippy-results
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets -- -Dwarnings -Drust-2018-idioms

  build:
    name: Build for ${{ matrix.target_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            target_name: Linux
            os: ubuntu-latest
            bin_path: ./target/x86_64-unknown-linux-gnu/release/unclog
          - target: x86_64-apple-darwin
            target_name: macOS
            os: macos-latest
            bin_path: ./target/x86_64-apple-darwin/release/unclog
          - target: x86_64-pc-windows-gnu
            target_name: Windows
            os: windows-latest
            bin_path: target\x86_64-pc-windows-gnu\release\unclog.exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bin unclog --release --all-features --target ${{ matrix.target }}
      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        with:
          name: bin-${{ matrix.target }}
          path: ${{ matrix.bin_path }}
